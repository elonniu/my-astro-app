---
import { Resource } from "sst";
import { getSignedUrl } from "@aws-sdk/s3-request-presigner";
import { S3Client, PutObjectCommand } from "@aws-sdk/client-s3";
import type { Router } from "../../api";
import { createTRPCProxyClient, httpBatchLink } from "@trpc/client";

const command = new PutObjectCommand({
	Key: crypto.randomUUID(),
	Bucket: Resource.MyBucket.name,
});
const url = await getSignedUrl(new S3Client({}), command);

const client = createTRPCProxyClient<Router>({
	links: [
		httpBatchLink({
			url: Resource.Trpc.url,
		}),
	],
});
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
		<style>
			main {
				margin: auto;
				padding: 1.5rem;
				max-width: 60ch;
			}
			form {
				color: white;
				padding: 2rem;
				display: flex;
				align-items: center;
				justify-content: space-between;
				background-color: #23262d;
				background-image: none;
				background-size: 400%;
				border-radius: 0.6rem;
				background-position: 100%;
				box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
			}
			button {
				appearance: none;
				font-weight: 500;
				border-radius: 5px;
				font-size: 0.875rem;
				padding: 0.5rem 0.75rem;
				background-color: white;
				border: 1px solid rgb(var(--accent));
				color: rgb(var(--accent));
			}
			button:active:enabled {
				background-color: #EEE;
			}
		</style>
	</head>
	<body>
		<h1>Astro</h1>
		{await client.greet.query({ name: "Patrick Star" })}
		<main>
			<form action={url}>
				<input name="file" type="file" accept="image/png, image/jpeg" />
				<button type="submit">Upload</button>
			</form>
			<script>
				const form = document.querySelector("form");
				form!.addEventListener("submit", async (e) => {
					e.preventDefault();

					const file = form!.file.files?.[0]!;

					const image = await fetch(form!.action, {
						body: file,
						method: "PUT",
						headers: {
							"Content-Type": file.type,
							"Content-Disposition": `attachment; filename="${file.name}"`,
						},
					});

					window.location.href = image.url.split("?")[0] || "/";
				});
			</script>
		</main>
	</body>
</html>
